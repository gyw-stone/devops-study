docker:
1.dockerfile 的主要参数
	FROM:以什么开始构建镜像
	WORKDIR ：工作目录
	ENV：设置环境变量
	RUN：执行命令
	COPY：复制文件或目录到容器指定路径
	ADD: 复制文件或目录到容器指定路径
	EXPOSE：监听端口
	CMD：执行命令
	ENDPOINT：执行命令
 
2.run cmd endpoint 的区别
  RUN在docker build是执行命令
  CMD在docker run时执行命令，有多个CMD时只执行最后一个
  endpoint 类似CMD，但不会被docker run的命令行参数指定的指令所覆盖

3.copy add的区别
  add可以自动解压
  copy不支持URl作为参数，不能从远程位置下载文件
4.docker支持什么网络以及有哪些服务器
  bridge,host,none、container
 桥接、主机、不分配、容器共享网络
服务器：HTTP,SMTP,POP,IMAP,Telnet,SSH,FTP

docker网络模型：none（封闭式容器），桥接式容器（bridge,default)，joined(联盟式容器)，开放式容器（open)

5. docker run命令和dockerfile 里面的RUN的区别
   区别就是执行时间不同，dockerfile里面的RUN执行节点是docker build
mysql:
5.有几种存储引擎，有什么区别
   常用的有innoDB,MylSAM,MEMORY,ARCHIVE
  innoDB：支持事务，支持行级锁，支持外键，支持崩溃修复能力和并发控制
  MylSAM：不支持事务，不支持行级锁，只支持并发插入的表锁
  MEMORY：文件和数据都存储在内存中，安全性低
  ARCHIVE：支持高并发的插入，不支持索引

6.有几种索引 
  FULLTEXT：全文索引，只MylSAM支持
  hash：哈希索引
 BTREE：B树索引
  RTREE：R树索引，有点在于范围查询
索引种类：
普通索引：仅加速查询
唯一索引：加速查询+列值唯一
主键索引：加上查询+列值唯一
组合索引：多列值组成一个索引，用于组合搜索
全文索引：对文本的内容进行分词，进行搜索
	
Linux：
7.执行程序遇到权限问题分析原因
  用户权限问题，这种情况需要看使用用户是否是指定运行程序的用户，若是，则赋予x权限，
若不是赋予相应的执行权限，比如直接配置用户权限，或者加入到有相应权限的用户组中
8.shell 支持几种数据类型
 字符串
 整型
 数组
元组
9.网络服务有哪些
  web
 ftp
 samba
nfs
dns
mail
http

10.rebase和merge的区别
merge后分支还在
rebase后分支不存在

11.git与svn的区别
-1 git是分布式的，svn是集中式
-2 git按原数据方式存储，svn按文件
-3 git没有一个全局版本号，svn有
-4 git的内容的完整性优于svn,git内存存储采取的是SHA-1哈希算法
-5 git下载下来后，在offline状态下可以看到所有的log，svn不可以
-6 svn必须先update才能提交
-7 克隆文件时svn是重复同样的动作，git只是获取文件的每个版本的元素
-8 svn只能有一个指定的中央版本库，git可以有无限个版本库
-9 分支在svn是一个完整的目录，git里可以在自己的本地版本库开放无限个分支
-10 提交在svn，会被直接记录到中央版本库，必须要有网，git的提交术语本地版本库的活动，只需推（git push）到主要版本库即可，且
-11 svn的特点是简单，git的特带你版本控制可以不依赖网路做任何事情对分支和合并有更好的支持

11.k8s部署流程
拉取代码到docker中，编译构建打包，推送容器到私有仓库，拉取该镜像到k8s的某个pod节点中，运行容器

12.给300台服务器怎么进行管理？
   1）使用跳板机，使用统一账号登陆，便于管理
   2）使用salt，ansible等配置管理工具进行统一调度和管理
   3）建立简单的服务器的系统、配置、应用的cmdb信息管理

13.排查服务器故障处理步骤：（问的频率高）
  1）先看服务器的电源指示灯是否亮，如果电源灯不亮，先检查并确认电源没问题后，试着按开机键是否能点亮服务器
如果不能点亮，和数据确认后先更换备用服务器以便快速恢复业务
  2） 如果服务器电源灯亮，接上显示器和键盘，如果服务器系统有异常（比如蓝屏）不能正常登陆系统，先和
数据确认，是否执行能重启服务器或是更换备用服务器，以便快速恢复业务
  3）如果正确输入用户名和密码情况下能登录系统，查看网卡指示灯是否正常，并用ip a查看网卡接口状态
用ping对端IP测试网络是否连通
  4）如果ping不通，先和数据确认并检查网卡配置文件参数是否正确，是否正确配置网关，用：”ifdown:ifup 网卡名“
命令重启单个网卡。网卡接口状态正确后，再用ping命令测试
  5） 还ping不通，及时排查并确保本地尾纤，模块等物理设备接入正常，收发光在规定范围内，和数据确认是否可以重启服务器
并确认数据方面没有网络配置和数据方面的变化
  6）能ping通则告知数据，并让数据帮忙确认链路是否正常，有没有丢包现象等，没有丢包就ok，有丢包就继续排查尾纤，模块等，
知道链路正常没有丢白，数据人员能及时的从远程登陆服务器做数据配置能快速恢复业务为OK
  7） 如果不能接入服务器，与数据确认是否可以重启，重启后登录正常，继续3，4，5，6步骤，如果还是不行，权衡利弊，有没有
必要更换新的服务器上去，恢复业务要紧

14.为什么进行三次握手
三次才能建立可靠的连接，如果只进行两次 握手，则会导致 资源浪费或 者死锁，当客户端发送的信息发生延迟，再服务端和
客户端数据传输完毕断开连接之后到达服务端，服务端认为客户端发起了一个新的tcp连接请求，假设两次握手成立，那么此时
服务端只要发送了确认，连接就建立了，而此时连接已经断开，客户端不会理睬服务端，就造成了资源的浪费

15.为什么要进行四次挥手
全双工通信

16.TCP和UDP的比较

UDP	TCP
是否连接	无连接	面向连接
是否可靠	不可靠传输，不使用流量控制和拥塞控制	可靠传输，使用流量控制和拥塞控制
连接对象个数	支持一对一，一对多，多对一和多对多交互通信	只能是一对一通信
传输方式	面向报文	面向字节流
首部开销	首部开销小，仅8字节	首部最小20字节，最大60字节
适用场景	适用于实时应用（IP电话、视频会议、直播等）	适用于要求可靠传输的应用，例如文件传输

 总结
TCP向上层提供面向连接的可靠服务 ，UDP向上层提供无连接不可靠服务。
虽然 UDP 并没有 TCP 传输来的准确，但是也能在很多实时性要求高的地方有所作为
对数据准确性要求高，速度可以相对较慢的，可以选用TCP















 
